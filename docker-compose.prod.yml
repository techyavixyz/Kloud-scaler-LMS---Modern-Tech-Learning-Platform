version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:latest
    container_name: kloud-scaler-mongo-prod
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME}
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - kloud-scaler-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: kloud-scaler-backend-prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGODB_URI=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/${MONGO_DB_NAME}?authSource=admin
      - MONGODB_DB=${MONGO_DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ADMIN_SECRET=${JWT_ADMIN_SECRET}
      - BACKEND_URL=${BACKEND_URL}
      - FRONTEND_URL=${FRONTEND_URL}
      - GOOGLE_DRIVE_FOLDER_ID=${GOOGLE_DRIVE_FOLDER_ID}
      - GOOGLE_CREDENTIALS_PATH=/app/credentials.json
      - GOOGLE_TOKEN_PATH=/app/token.json
      - GOOGLE_REDIRECT_URL=${BACKEND_URL}/oauth2callback
    volumes:
      - ./credentials.json:/app/credentials.json:ro
      - ./token.json:/app/token.json:ro
      - backend_uploads:/app/uploads
    depends_on:
      - mongodb
    networks:
      - kloud-scaler-network

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        - VITE_BACKEND_URL=${BACKEND_URL}
        - VITE_FRONTEND_URL=${FRONTEND_URL}
    container_name: kloud-scaler-frontend-prod
    restart: unless-stopped
    networks:
      - kloud-scaler-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: kloud-scaler-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - backend_uploads:/var/www/uploads:ro
    depends_on:
      - backend
      - frontend
    networks:
      - kloud-scaler-network

volumes:
  mongodb_data:
  backend_uploads:

networks:
  kloud-scaler-network:
    driver: bridge